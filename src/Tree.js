import * as THREE from 'three'
import { useGLTF, Sparkles, Line } from '@react-three/drei'
import { folder, useControls } from 'leva'

const glowRed = new THREE.MeshBasicMaterial({ color: new THREE.Color(7, 0, 0.5), toneMapped: false })
const glowBlue = new THREE.MeshBasicMaterial({ color: new THREE.Color(0, 0.5, 20), toneMapped: false })
const glowGreen = new THREE.MeshBasicMaterial({ color: new THREE.Color(0, 3, 1), toneMapped: false })
const brown = new THREE.MeshBasicMaterial({ color: new THREE.Color(0, 3, 1), toneMapped: true })

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Source: https://discourse.threejs.org/t/struggling-with-gltf-and-lighting/39564
*/
export function Tree({ ...props }) {
  // const { p1 } = useControls('Tree Pos2', {
  //   p1: {
  //     value: { x: -3.45, y: -2.54, z: 3.15 },
  //     step: 0.01,
  //     joystick: 'invertY',
  //   },
  // })

  // const { spherePos } = useControls('Sphere Pos', {
  //   spherePos: {
  //     value: { x: 0, y: 1, z: 0 },
  //     step: 0.1,
  //   },
  // })

  const { nodes, materials } = useGLTF('/tree.glb')

  const halo = 0.75

  return (
    <group {...props} dispose={null} rotation={[0, 0, 0]} position={[-3.45, -2.54, 2]} scale={halo}>
      {' '}
      <mesh geometry={nodes.Object_4.geometry} material={materials.material_0} castShadow />
      <mesh geometry={nodes.Object_6.geometry} material={materials.Tree_Bark} />
      <mesh position={[-1.5, 2.2, 0]} material={glowGreen}>
        <sphereGeometry args={[0.4, 32, 32]} />
      </mesh>
      <mesh position={[-0.7, 3.2, -0.7]} material={glowGreen} castShadow>
        <sphereGeometry args={[0.4, 32, 32]} />
      </mesh>
      <mesh position={[0.7, 2.7, 0.4]} material={glowGreen} castShadow>
        <sphereGeometry args={[0.4, 32, 32]} />
      </mesh>
      <mesh position={[-0.76, 2.55, 1.56]} material={glowGreen} castShadow>
        <sphereGeometry args={[0.4, 32, 32]} />
      </mesh>
      {/* <directionalLight position={[5, 10, 5]} intensity={0.05 / 2} castShadow /> */}
    </group>
  )
}
